// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhanNguyen_DemoAPI.Data;

#nullable disable

namespace PhanNguyen_DemoAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230812110828_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PhanNguyen_DemoAPI.Models.BaoHiem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("DeleteDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NhanVienId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenBH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NhanVienId");

                    b.ToTable("BaoHiems");
                });

            modelBuilder.Entity("PhanNguyen_DemoAPI.Models.DuAn", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("DeleteDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TenDA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DuAns");
                });

            modelBuilder.Entity("PhanNguyen_DemoAPI.Models.NhanVien", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("DeleteDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhongBanId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PhongBanId");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("PhanNguyen_DemoAPI.Models.PhanCong", b =>
                {
                    b.Property<string>("NhanVienId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DuAnId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("DeleteDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("NgayBD")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("NgayKT")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("NhanVienId", "DuAnId");

                    b.HasIndex("DuAnId");

                    b.ToTable("PhanCongs");
                });

            modelBuilder.Entity("PhanNguyen_DemoAPI.Models.PhongBan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("DeleteDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TenPB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhongBans");
                });

            modelBuilder.Entity("PhanNguyen_DemoAPI.Models.BaoHiem", b =>
                {
                    b.HasOne("PhanNguyen_DemoAPI.Models.NhanVien", "NhanVien")
                        .WithMany("BaoHiems")
                        .HasForeignKey("NhanVienId");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("PhanNguyen_DemoAPI.Models.NhanVien", b =>
                {
                    b.HasOne("PhanNguyen_DemoAPI.Models.PhongBan", "PhongBan")
                        .WithMany("NhanViens")
                        .HasForeignKey("PhongBanId");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("PhanNguyen_DemoAPI.Models.PhanCong", b =>
                {
                    b.HasOne("PhanNguyen_DemoAPI.Models.DuAn", "DuAn")
                        .WithMany("PhanCongs")
                        .HasForeignKey("DuAnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhanNguyen_DemoAPI.Models.NhanVien", "NhanVien")
                        .WithMany("PhanCongs")
                        .HasForeignKey("NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DuAn");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("PhanNguyen_DemoAPI.Models.DuAn", b =>
                {
                    b.Navigation("PhanCongs");
                });

            modelBuilder.Entity("PhanNguyen_DemoAPI.Models.NhanVien", b =>
                {
                    b.Navigation("BaoHiems");

                    b.Navigation("PhanCongs");
                });

            modelBuilder.Entity("PhanNguyen_DemoAPI.Models.PhongBan", b =>
                {
                    b.Navigation("NhanViens");
                });
#pragma warning restore 612, 618
        }
    }
}
